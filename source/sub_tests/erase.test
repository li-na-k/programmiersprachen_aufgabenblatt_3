TEST_CASE("remove elements with erase", "[erase]") {
  List<int> list{};
  list.push_front(1);
  list.push_back(2);
  list.push_back(3);
  list.push_back(4);
  list.push_back(5);

  // actual tests
  // ------------
  //erasing at front

  ListIterator<int> it {get_first_pointer(list)};

    //execute erase and test if returned value is right
    auto returnedIterator = list.erase(it); 
    REQUIRE(returnedIterator == list.begin());
 
    // front to back list content should be: 2 3 4 5
    REQUIRE(2 == list.front()); 
    REQUIRE(5 == list.back()); 
    //size should be 4
    REQUIRE(4 == list.size()); 
    //check if links between nodes are set correctly
    auto first_pointer = get_first_pointer(list);
    auto last_pointer  = get_last_pointer(list); 
    REQUIRE(first_pointer->prev == nullptr);
    REQUIRE(first_pointer->next->value == 3);
  
    // ------------
    //erasing in middle
    ListIterator<int> it2 {get_first_pointer(list)};
    ++it2;

    //execute erase and test if returned value is right
    auto returnedIterator2 = list.erase(it2); 
    REQUIRE(returnedIterator2 == ++it2);
  
    // front to back list content should be: 2 4 5
    REQUIRE(2 == list.front()); 
    REQUIRE(5 == list.back()); 
    //size should be 3
    REQUIRE(3 == list.size()); 
    //check if links between nodes are set correctly
    first_pointer = get_first_pointer(list);
    last_pointer  = get_last_pointer(list); 
    REQUIRE(first_pointer->prev == nullptr);
    REQUIRE(first_pointer->next->value == 4);

    // ------------
    //erasing last element
    ListIterator<int> it3 {get_first_pointer(list)};
    ++it3;
    ++it3;

    //execute erase and test if returned value is right
    auto returnedIterator3 = list.erase(it3); 
    REQUIRE(returnedIterator3 == list.end());
  
    // front to back list content should be: 2 4 
    REQUIRE(2 == list.front()); 
    REQUIRE(4 == list.back()); 
    //size should be 2
    REQUIRE(2 == list.size()); 
    //check if links between nodes are set correctly
    first_pointer = get_first_pointer(list);
    last_pointer  = get_last_pointer(list); 
    REQUIRE(first_pointer->prev == nullptr);
    REQUIRE(first_pointer->next->value == 4);
    REQUIRE(last_pointer->prev->value == 2);
    REQUIRE(first_pointer->next->next == nullptr);

    // ------------
    //erasing last element
    ListIterator<int> it4 {get_first_pointer(list)};
    ++it4;

    //execute erase and test if returned value is right
    auto returnedIterator4 = list.erase(it4); 
    REQUIRE(returnedIterator4 == list.end());
  
    // front to back list content should be: 2 
    REQUIRE(2 == list.front()); 
    REQUIRE(2 == list.back()); 
    //size should be 1
    REQUIRE(1 == list.size()); 

    // ------------
    //erasing first element
    ListIterator<int> it5 {get_first_pointer(list)};

    //execute erase and test if returned value is right
    auto returnedIterator5 = list.erase(it5); 
    REQUIRE(returnedIterator5 == list.begin());

    //size should be 0
    REQUIRE(0 == list.size()); 
    REQUIRE(true == list.empty()); 


    // ------------
    //erasing from empty list
    ListIterator<int> it6 {get_first_pointer(list)};

    //execute erase and test if returned value is right
    REQUIRE_THROWS(list.erase(it6));
    
}

 

