TEST_CASE("List-Initializer Konstruktor", "[List-Initializer Konstruktor]") {

    List<int> int_list{9, 5, 38, 100};

    REQUIRE(int_list.front() == 9);
    REQUIRE(int_list.back() == 100);
    REQUIRE(int_list.size() == 4);
    int_list.pop_front();
    REQUIRE(int_list.front() == 5);
    REQUIRE(int_list.size() == 3);
    int_list.pop_back();
    REQUIRE(int_list.back() == 38);
    REQUIRE(int_list.size() == 2);
    int_list.reverse();
    REQUIRE(int_list.back() == 5);
    REQUIRE(int_list.front() == 38);
    int_list.pop_back();
    REQUIRE(int_list.back() == 38);
    REQUIRE(int_list.size() == 1);
    int_list.pop_back();
    REQUIRE(int_list.empty() == true);
    REQUIRE(int_list.size() == 0);


    List<int> int_list2{1,2,3,4,5,6,7,8,9,0};
    REQUIRE(int_list2.back() == 0);
    REQUIRE(int_list2.front() == 1);
    int_list2.reverse();
    REQUIRE(int_list2.back() == 1);
    REQUIRE(int_list2.front() == 0);
    int_list2.push_back(10);
    REQUIRE(int_list2.back() == 10);
    REQUIRE(int_list2.size() == 11);


    List<int> int_list3{1,0,5,4};
    REQUIRE(int_list3.back() == 4);
    REQUIRE(int_list3.front() == 1);
    int_list3.reverse();
    REQUIRE(int_list3.back() == 1);
    REQUIRE(int_list3.front() == 4);
    int_list3.push_back(999);
    REQUIRE(int_list3.back() == 999);
    REQUIRE(int_list3.size() == 5);
    int_list3.push_front(999);
    REQUIRE(int_list3.front() == 999);
    REQUIRE(int_list3.size() == 6);





}